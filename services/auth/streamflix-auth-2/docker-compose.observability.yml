version: '3.8'

services:
  # Main Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=streamflix
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - LOG_LEVEL=info
      - TRACING_ENABLED=true
      - OTLP_ENDPOINT=http://jaeger:4318/v1/traces
      - PROMETHEUS_ENABLED=true
    depends_on:
      - postgres
      - redis
      - prometheus
      - jaeger
    networks:
      - streamflix-net
    restart: unless-stopped

  # Database
  postgres:
    image: postgres:15
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=streamflix
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - streamflix-net
    restart: unless-stopped

  # Cache
  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    networks:
      - streamflix-net
    restart: unless-stopped

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    ports:
      - '9090:9090'
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --web.enable-lifecycle
    networks:
      - streamflix-net
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - '3001:3000'
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - ./dashboards:/var/lib/grafana/dashboards
      - ./monitoring/grafana-provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - streamflix-net
    restart: unless-stopped

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - '16686:16686' # UI
      - '4317:4317' # OTLP gRPC
      - '4318:4318' # OTLP HTTP
      - '14268:14268' # Jaeger HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - QUERY_BASE_PATH=/jaeger
    networks:
      - streamflix-net
    restart: unless-stopped

  # Prometheus Alert Manager
  alertmanager:
    image: prom/alertmanager:latest
    ports:
      - '9093:9093'
    volumes:
      - ./monitoring/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
    networks:
      - streamflix-net
    restart: unless-stopped

volumes:
  postgres-data:
  prometheus-data:
  grafana-data:

networks:
  streamflix-net:
    driver: bridge
