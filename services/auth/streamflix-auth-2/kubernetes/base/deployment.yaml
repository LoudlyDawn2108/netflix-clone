apiVersion: apps/v1
kind: Deployment
metadata:
  name: streamflix-auth
  labels:
    app: streamflix-auth
    service: authentication
spec:
  replicas: 3
  selector:
    matchLabels:
      app: streamflix-auth
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: streamflix-auth
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: auth-service
        image: streamflix-auth:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: NODE_ENV
        - name: PORT
          value: "3000"
        - name: API_PREFIX
          value: "api"
        # Database configuration
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: DB_PORT
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: streamflix-auth-secrets
              key: DB_USERNAME
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: streamflix-auth-secrets
              key: DB_PASSWORD
        - name: DB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: DB_DATABASE
        - name: DB_SCHEMA
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: DB_SCHEMA
        - name: DB_CONNECTION_POOL_SIZE
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: DB_CONNECTION_POOL_SIZE
        # JWT configuration
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: streamflix-auth-secrets
              key: JWT_SECRET
        - name: JWT_ACCESS_EXPIRATION
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: JWT_ACCESS_EXPIRATION
        - name: JWT_REFRESH_EXPIRATION
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: JWT_REFRESH_EXPIRATION
        # Security configuration
        - name: PASSWORD_HASH_ROUNDS
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: PASSWORD_HASH_ROUNDS
        - name: RATE_LIMIT_TTL
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: RATE_LIMIT_TTL
        - name: RATE_LIMIT_MAX
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: RATE_LIMIT_MAX
        # Observability
        - name: TRACING_ENABLED
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: TRACING_ENABLED
        - name: PROMETHEUS_ENABLED
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: PROMETHEUS_ENABLED
        # Redis configuration
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: streamflix-auth-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: streamflix-auth-secrets
              key: REDIS_PASSWORD
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 10
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      terminationGracePeriodSeconds: 30