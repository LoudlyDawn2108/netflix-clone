services:
    postgres:
        image: postgres:16-alpine
        container_name: streamflix-videos-db
        environment:
            POSTGRES_DB: streamflix_videos
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
        ports:
            - "5432:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 10s
            timeout: 5s
            retries: 5

    # MinIO for local S3-compatible storage
    minio:
        image: minio/minio
        container_name: streamflix-minio
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        ports:
            - "9000:9000"
            - "9001:9001"
        volumes:
            - minio_data:/data
        command: server /data --console-address ":9001"
        healthcheck:
            test:
                ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
            interval: 30s
            timeout: 20s
            retries: 3

    # Kafka for messaging
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.3
        container_name: streamflix-zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
        ports:
            - "2181:2181"

    kafka:
        image: confluentinc/cp-kafka:7.3.3
        container_name: streamflix-kafka
        depends_on:
            - zookeeper
        ports:
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "kafka-topics --bootstrap-server localhost:9092 --list",
                ]
            interval: 30s
            timeout: 10s
            retries: 3 # Application service (uncomment after building the application)
    video-mgmt-service:
        build: .
        container_name: streamflix-video-mgmt-service
        depends_on:
            postgres:
                condition: service_healthy
            kafka:
                condition: service_healthy
            minio:
                condition: service_healthy
        environment:
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/streamflix_videos
            SPRING_PROFILES_ACTIVE: dev
            SPRING_JPA_HIBERNATE_DDL_AUTO: none
            SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: true
            SPRING_FLYWAY_ENABLED: true
            SPRING_FLYWAY_BASELINE_ON_MIGRATE: true
            KAFKA_BOOTSTRAP_SERVERS: kafka:29092
            S3_ENDPOINT: http://minio:9000
            S3_ACCESS_KEY: minioadmin
            S3_SECRET_KEY: minioadmin
        ports:
            - "8080:8080"
        entrypoint:
            [
                "/wait-for-it.sh",
                "postgres:5432",
                "--",
                "java",
                "-Djava.security.egd=file:/dev/./urandom",
                "-XX:MaxRAMPercentage=75.0",
                "-jar",
                "app.jar",
            ]

volumes:
    postgres_data:
    minio_data:
